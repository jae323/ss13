-- Smart Special Killing Aimbot
-- Modified from Ultimate Zombie Aimlock Script
-- Features: GuardianZombie priority when near closest zombie, Boss ignore at 50% HP

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local camera = workspace.CurrentCamera
local player = Players.LocalPlayer

-- Kiểm tra xem GUI đã tồn tại chưa để tránh tạo nhiều lần
if game:GetService("CoreGui"):FindFirstChild("SmartSpecialKillingGUI") or player.PlayerGui:FindFirstChild("SmartSpecialKillingGUI") then
    return -- Nếu đã tồn tại thì không tạo lại
end

-- NEW: Robust GUI initialization
repeat task.wait() until player:IsDescendantOf(game) and player:FindFirstChild("PlayerGui")

local function createSafeGUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "SmartSpecialKillingGUI"
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- 1st try: Standard PlayerGui
    local success = pcall(function()
        screenGui.Parent = player:WaitForChild("PlayerGui", 5)
    end)
    
    if not success then
        -- 2nd try: Exploit-specific methods
        pcall(function()
            if get_hidden_gui then
                screenGui.Parent = get_hidden_gui()
            elseif gethui then
                screenGui.Parent = gethui()
            elseif syn and syn.protect_gui then
                syn.protect_gui(screenGui)
                screenGui.Parent = game:GetService("CoreGui")
            else
                screenGui.Parent = game:GetService("CoreGui")
            end
        end)
    end
    return screenGui
end

local screenGui = createSafeGUI()

-- Biến toàn cục để xác định phiên bản đang chạy
local currentVersion = "SmartSpecialKilling" -- "Main", "OnlySniperzombie", "IgnoreWraith", or "SmartSpecialKilling"

-- Configuration
local aimPartName = "Head"
local zombiesFolder = workspace:WaitForChild("Zombies")
local isPC = false -- Will be set automatically
local aimbindKey = Enum.KeyCode.Q -- Default keybind
local waitingForKeybind = false

-- State variables
local aimLockActive = false
local aimFOV = 150
local draggingSlider = false
local uiVisible = true
local fovVisible = true
local espVisible = false
local wallCheckEnabled = true
local hitboxEnabled = false

-- NEW: Smart Special Killing variables
local GUARDIAN_PRIORITY_RANGE = 50 -- Distance to prioritize GuardianZombie when near closest zombie
local BOSS_IGNORE_HP_THRESHOLD = 0.5 -- 50% HP
local BOSS_IGNORE_DURATION = 8 -- Seconds to ignore Boss
local bossIgnoreTimers = {} -- Table to track boss ignore timers

-- NEW: Smooth aiming variables
local smoothAimEnabled = false
local smoothnessAmount = 1.5 -- Default smoothness
local lastCameraCFrame = camera.CFrame

-- ESP storage
local espObjects = {}

-- Detect platform
isPC = UserInputService:GetPlatform() == Enum.Platform.Windows

-- Store version button colors
local versionButtonColors = {}

----------------------------------------------------------------
-- FOV CIRCLE SYSTEM
----------------------------------------------------------------
local fovCircle = Drawing.new("Circle")
fovCircle.Visible = fovVisible
fovCircle.Color = Color3.fromRGB(0, 170, 255)
fovCircle.Thickness = 2
fovCircle.NumSides = 64
fovCircle.Radius = aimFOV
fovCircle.Filled = false

local function updateFOVCircle()
    fovCircle.Radius = aimFOV
    fovCircle.Position = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)
    fovCircle.Visible = fovVisible
end

----------------------------------------------------------------
-- SMART SPECIAL KILLING FUNCTIONS (NEW)
----------------------------------------------------------------
local function isGuardianZombie(zombie)
    return zombie.Name == "GuardianZombie" or (zombie:FindFirstChild("IsGuardian") and zombie.IsGuardian.Value == true)
end

local function isBossZombie(zombie)
    return zombie.Name == "Boss" or (zombie:FindFirstChild("IsBoss") and zombie.IsBoss.Value == true)
end

local function shouldIgnoreBoss(boss)
    -- Check if boss is in ignore timers
    if bossIgnoreTimers[boss] and os.clock() - bossIgnoreTimers[boss] < BOSS_IGNORE_DURATION then
        return true
    end
    
    -- Check if boss HP is below threshold
    local humanoid = boss:FindFirstChild("Humanoid")
    if humanoid and humanoid.Health / humanoid.MaxHealth <= BOSS_IGNORE_HP_THRESHOLD then
        -- Add to ignore timers
        bossIgnoreTimers[boss] = os.clock()
        return true
    end
    
    return false
end

local function cleanupBossTimers()
    local currentTime = os.clock()
    for boss, timer in pairs(bossIgnoreTimers) do
        if not boss:IsDescendantOf(workspace) or currentTime - timer >= BOSS_IGNORE_DURATION then
            bossIgnoreTimers[boss] = nil
        end
    end
end

----------------------------------------------------------------
-- SPECIAL ZOMBIE HANDLING FUNCTIONS
----------------------------------------------------------------
local function isSniperZombie(zombie)
    -- Check if this is a sniper zombie by name or other characteristics
    return zombie.Name:lower():find("sniper") or zombie.Name:lower():find("shooter")
end

local function isWraithZombie(zombie)
    -- Check if this is a Wraith zombie by name
    return zombie.Name:lower():find("wraith")
end

----------------------------------------------------------------
-- SIMPLIFIED GUI SYSTEM
----------------------------------------------------------------
local mainFrame, toggleUIBtn, contentScrollingFrame

-- Colors
local backgroundColor = Color3.fromRGB(30, 30, 40)
local accentColor = Color3.fromRGB(0, 120, 220)
local buttonColor = Color3.fromRGB(45, 45, 60)
local buttonHoverColor = Color3.fromRGB(55, 55, 75)
local textColor = Color3.fromRGB(255, 255, 255)
local successColor = Color3.fromRGB(0, 180, 80)
local warningColor = Color3.fromRGB(220, 120, 0)

local function createModernButton(parent, text, size, position, callback)
    local button = Instance.new("TextButton")
    button.Size = size
    button.Position = position
    button.BackgroundColor3 = buttonColor
    button.TextColor3 = textColor
    button.Text = text
    button.Font = Enum.Font.Gotham
    button.TextSize = 13
    button.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 5)
    corner.Parent = button
    
    -- Hover effect
    button.MouseEnter:Connect(function()
        game:GetService("TweenService"):Create(
            button,
            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {BackgroundColor3 = buttonHoverColor}
        ):Play()
    end)
    
    button.MouseLeave:Connect(function()
        game:GetService("TweenService"):Create(
            button,
            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {BackgroundColor3 = buttonColor}
        ):Play()
    end)
    
    button.MouseButton1Click:Connect(callback)
    
    return button
end

local function createToggleButton(parent, text, yPos, default, onColor, callback)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, 0, 0, 35)
    container.Position = UDim2.new(0, 0, 0, yPos)
    container.BackgroundTransparency = 1
    container.Parent = parent
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = textColor
    label.Font = Enum.Font.Gotham
    label.TextSize = 13
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = container
    
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0.25, 0, 0.6, 0)
    button.Position = UDim2.new(0.75, 0, 0.2, 0)
    button.BackgroundColor3 = default and onColor or buttonColor
    button.Text = default and "ON" or "OFF"
    button.TextColor3 = textColor
    button.Font = Enum.Font.GothamBold
    button.TextSize = 12
    button.Parent = container
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 5)
    corner.Parent = button
    
    button.MouseButton1Click:Connect(function()
        local newState = not default
        default = newState
        button.BackgroundColor3 = newState and onColor or buttonColor
        button.Text = newState and "ON" or "OFF"
        callback(newState)
    end)
    
    return button
end

local function initializeModernGUI()
    -- UI Toggle Button (with X key functionality)
    toggleUIBtn = createModernButton(
        screenGui,
        "Show UI [X]",
        UDim2.new(0, 100, 0, 30),
        UDim2.new(0, 10, 0, 10),
        function()
            uiVisible = not uiVisible
            mainFrame.Visible = uiVisible
            toggleUIBtn.Text = uiVisible and "Hide UI [X]" or "Show UI [X]"
        end
    )
    
    -- Main Frame
    mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 280, 0, 380)
    mainFrame.Position = UDim2.new(0.5, -140, 0.5, -190)
    mainFrame.BackgroundColor3 = backgroundColor
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    mainFrame.Visible = uiVisible
    mainFrame.ClipsDescendants = true
    mainFrame.Active = true
    mainFrame.Draggable = true
    
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 8)
    mainCorner.Parent = mainFrame
    
    -- Title Bar
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 35)
    titleBar.Position = UDim2.new(0, 0, 0, 0)
    titleBar.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 8)
    titleCorner.Parent = titleBar
    
    local titleText = Instance.new("TextLabel")
    titleText.Size = UDim2.new(1, -10, 1, 0)
    titleText.Position = UDim2.new(0, 10, 0, 0)
    titleText.BackgroundTransparency = 1
    titleText.Text = "SMART SPECIAL KILLING"
    titleText.TextColor3 = textColor
    titleText.Font = Enum.Font.GothamBold
    titleText.TextSize = 16
    titleText.TextXAlignment = Enum.TextXAlignment.Left
    titleText.Parent = titleBar
    
    -- Close button
    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(0, 25, 0, 25)
    closeBtn.Position = UDim2.new(1, -30, 0, 5)
    closeBtn.BackgroundTransparency = 1
    closeBtn.Text = "X"
    closeBtn.TextColor3 = textColor
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.TextSize = 16
    closeBtn.Parent = titleBar
    
    closeBtn.MouseButton1Click:Connect(function()
        uiVisible = false
        mainFrame.Visible = false
        toggleUIBtn.Text = "Show UI [X]"
    end)
    
    -- Content Scrolling Frame
    contentScrollingFrame = Instance.new("ScrollingFrame")
    contentScrollingFrame.Size = UDim2.new(1, -10, 1, -45)
    contentScrollingFrame.Position = UDim2.new(0, 5, 0, 40)
    contentScrollingFrame.BackgroundTransparency = 1
    contentScrollingFrame.ScrollBarThickness = 6
    contentScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 600)
    contentScrollingFrame.ScrollingDirection = Enum.ScrollingDirection.Y
    contentScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
    contentScrollingFrame.Parent = mainFrame
    
    local contentLayout = Instance.new("UIListLayout")
    contentLayout.Padding = UDim.new(0, 10)
    contentLayout.Parent = contentScrollingFrame
    
    -- Adjust yPos for PC version
    local yPos = 0
    
    -- Guardian Settings (Moved to top)
    local guardianRangeContainer = Instance.new("Frame")
    guardianRangeContainer.Size = UDim2.new(1, 0, 0, 40)
    guardianRangeContainer.Position = UDim2.new(0, 0, 0, yPos)
    guardianRangeContainer.BackgroundTransparency = 1
    guardianRangeContainer.Parent = contentScrollingFrame
    
    local guardianRangeLabel = Instance.new("TextLabel")
    guardianRangeLabel.Size = UDim2.new(1, 0, 0, 20)
    guardianRangeLabel.Position = UDim2.new(0, 0, 0, 0)
    guardianRangeLabel.BackgroundTransparency = 1
    guardianRangeLabel.Text = "Guardian Priority Range: " .. GUARDIAN_PRIORITY_RANGE .. " studs"
    guardianRangeLabel.TextColor3 = textColor
    guardianRangeLabel.Font = Enum.Font.Gotham
    guardianRangeLabel.TextSize = 13
    guardianRangeLabel.TextXAlignment = Enum.TextXAlignment.Left
    guardianRangeLabel.Parent = guardianRangeContainer
    
    local guardianRangeBtn = createModernButton(
        guardianRangeContainer,
        "Change",
        UDim2.new(0.35, 0, 0, 25),
        UDim2.new(0.65, 0, 0, 0),
        function()
            GUARDIAN_PRIORITY_RANGE = GUARDIAN_PRIORITY_RANGE == 50 and 75 or 50
            guardianRangeLabel.Text = "Guardian Priority Range: " .. GUARDIAN_PRIORITY_RANGE .. " studs"
        end
    )
    
    yPos = yPos + 45
    
    -- Add [E] to the AimLock text to indicate the keybind
    local aimlockToggle = createToggleButton(contentScrollingFrame, "AimLock [E]", yPos, aimLockActive, successColor, function(s) 
        aimLockActive = s 
    end)
    yPos = yPos + 35
    
    -- Smooth Aim toggle
    local smoothAimToggle = createToggleButton(contentScrollingFrame, "Smooth Aim", yPos, smoothAimEnabled, Color3.fromRGB(120, 0, 200), function(s) 
        smoothAimEnabled = s 
    end)
    yPos = yPos + 35
    
    local fovToggle = createToggleButton(contentScrollingFrame, "FOV Circle", yPos, fovVisible, accentColor, function(s) 
        fovVisible = s 
        updateFOVCircle()
    end)
    yPos = yPos + 35
    
    local espToggle = createToggleButton(contentScrollingFrame, "Zombie ESP", yPos, espVisible, warningColor, function(s) 
        espVisible = s 
        updateESP() 
    end)
    yPos = yPos + 35
    
    local wallCheckToggle = createToggleButton(contentScrollingFrame, "Wall Check", yPos, wallCheckEnabled, Color3.fromRGB(0, 150, 150), function(s) 
        wallCheckEnabled = s 
    end)
    yPos = yPos + 35
    
    local hitboxToggle = createToggleButton(contentScrollingFrame, "Expand Hitbox", yPos, hitboxEnabled, Color3.fromRGB(160, 0, 160), function(s) 
        hitboxEnabled = s 
        updateAllZombies() 
    end)
    yPos = yPos + 35
    
    -- Smoothness Selection
    local smoothnessContainer = Instance.new("Frame")
    smoothnessContainer.Size = UDim2.new(1, 0, 0, 40)
    smoothnessContainer.Position = UDim2.new(0, 0, 0, yPos)
    smoothnessContainer.BackgroundTransparency = 1
    smoothnessContainer.Parent = contentScrollingFrame
    
    local smoothnessLabel = Instance.new("TextLabel")
    smoothnessLabel.Size = UDim2.new(1, 0, 0, 20)
    smoothnessLabel.Position = UDim2.new(0, 0, 0, 0)
    smoothnessLabel.BackgroundTransparency = 1
    smoothnessLabel.Text = "Smoothness: " .. smoothnessAmount
    smoothnessLabel.TextColor3 = textColor
    smoothnessLabel.Font = Enum.Font.Gotham
    smoothnessLabel.TextSize = 13
    smoothnessLabel.TextXAlignment = Enum.TextXAlignment.Left
    smoothnessLabel.Parent = smoothnessContainer
    
    local smoothness15Btn = createModernButton(
        smoothnessContainer,
        "1.5",
        UDim2.new(0.3, 0, 0, 25),
        UDim2.new(0, 0, 0, 20),
        function()
            smoothnessAmount = 1.5
            smoothnessLabel.Text = "Smoothness: " .. smoothnessAmount
            smoothness15Btn.BackgroundColor3 = accentColor
            smoothness20Btn.BackgroundColor3 = buttonColor
            smoothness25Btn.BackgroundColor3 = buttonColor
        end
    )
    smoothness15Btn.BackgroundColor3 = smoothnessAmount == 1.5 and accentColor or buttonColor
    
    local smoothness20Btn = createModernButton(
        smoothnessContainer,
        "2.0",
        UDim2.new(0.3, 0, 0, 25),
        UDim2.new(0.35, 0, 0, 20),
        function()
            smoothnessAmount = 2.0
            smoothnessLabel.Text = "Smoothness: " .. smoothnessAmount
            smoothness15Btn.BackgroundColor3 = buttonColor
            smoothness20Btn.BackgroundColor3 = accentColor
            smoothness25Btn.BackgroundColor3 = buttonColor
        end
    )
    smoothness20Btn.BackgroundColor3 = smoothnessAmount == 2.0 and accentColor or buttonColor
    
    local smoothness25Btn = createModernButton(
        smoothnessContainer,
        "2.5",
        UDim2.new(0.3, 0, 0, 25),
        UDim2.new(0.7, 0, 0, 20),
        function()
            smoothnessAmount = 2.5
            smoothnessLabel.Text = "Smoothness: " .. smoothnessAmount
            smoothness15Btn.BackgroundColor3 = buttonColor
            smoothness20Btn.BackgroundColor3 = buttonColor
            smoothness25Btn.BackgroundColor3 = accentColor
        end
    )
    smoothness25Btn.BackgroundColor3 = smoothnessAmount == 2.5 and accentColor or buttonColor
    
    yPos = yPos + 45
    
    -- FOV Selection Buttons
    local fovSelectionContainer = Instance.new("Frame")
    fovSelectionContainer.Size = UDim2.new(1, 0, 0, 40)
    fovSelectionContainer.Position = UDim2.new(0, 0, 0, yPos)
    fovSelectionContainer.BackgroundTransparency = 1
    fovSelectionContainer.Parent = contentScrollingFrame
    
    local fovSelectionLabel = Instance.new("TextLabel")
    fovSelectionLabel.Size = UDim2.new(1, 0, 0, 20)
    fovSelectionLabel.Position = UDim2.new(0, 0, 0, 0)
    fovSelectionLabel.BackgroundTransparency = 1
    fovSelectionLabel.Text = "FOV Selection:"
    fovSelectionLabel.TextColor3 = textColor
    fovSelectionLabel.Font = Enum.Font.Gotham
    fovSelectionLabel.TextSize = 13
    fovSelectionLabel.TextXAlignment = Enum.TextXAlignment.Left
    fovSelectionLabel.Parent = fovSelectionContainer
    
    local fov50Btn = createModernButton(
        fovSelectionContainer,
        "50",
        UDim2.new(0.3, 0, 0, 25),
        UDim2.new(0, 0, 0, 20),
        function()
            aimFOV = 50
            updateFOVSlider()
            fov50Btn.BackgroundColor3 = accentColor
            fov100Btn.BackgroundColor3 = buttonColor
            fov150Btn.BackgroundColor3 = buttonColor
        end
    )
    fov50Btn.BackgroundColor3 = aimFOV == 50 and accentColor or buttonColor
    
    local fov100Btn = createModernButton(
        fovSelectionContainer,
        "100",
        UDim2.new(0.3, 0, 0, 25),
        UDim2.new(0.35, 0, 0, 20),
        function()
            aimFOV = 100
            updateFOVSlider()
            fov50Btn.BackgroundColor3 = buttonColor
            fov100Btn.BackgroundColor3 = accentColor
            fov150Btn.BackgroundColor3 = buttonColor
        end
    )
    fov100Btn.BackgroundColor3 = aimFOV == 100 and accentColor or buttonColor
    
    local fov150Btn = createModernButton(
        fovSelectionContainer,
        "150",
        UDim2.new(0.3, 0, 0, 25),
        UDim2.new(0.7, 0, 0, 20),
        function()
            aimFOV = 150
            updateFOVSlider()
            fov50Btn.BackgroundColor3 = buttonColor
            fov100Btn.BackgroundColor3 = buttonColor
            fov150Btn.BackgroundColor3 = accentColor
        end
    )
    fov150Btn.BackgroundColor3 = aimFOV == 150 and accentColor or buttonColor
    
    yPos = yPos + 45
    
    -- FOV Slider
    local sliderContainer = Instance.new("Frame")
    sliderContainer.Size = UDim2.new(1, 0, 0, 50)
    sliderContainer.Position = UDim2.new(0, 0, 0, yPos)
    sliderContainer.BackgroundTransparency = 1
    sliderContainer.Parent = contentScrollingFrame
    
    local sliderLabel = Instance.new("TextLabel")
    sliderLabel.Size = UDim2.new(1, 0, 0, 20)
    sliderLabel.Position = UDim2.new(0, 0, 0, 0)
    sliderLabel.BackgroundTransparency = 1
    sliderLabel.Text = "Aim FOV: " .. aimFOV
    sliderLabel.TextColor3 = textColor
    sliderLabel.Font = Enum.Font.Gotham
    sliderLabel.TextSize = 13
    sliderLabel.TextXAlignment = Enum.TextXAlignment.Left
    sliderLabel.Parent = sliderContainer
    
    local sliderTrack = Instance.new("Frame")
    sliderTrack.Size = UDim2.new(1, 0, 0, 6)
    sliderTrack.Position = UDim2.new(0, 0, 0, 30)
    sliderTrack.BackgroundColor3 = buttonColor
    sliderTrack.Parent = sliderContainer
    
    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(1, 0)
    sliderCorner.Parent = sliderTrack
    
    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new((aimFOV - 20)/280, 0, 1, 0)
    sliderFill.BackgroundColor3 = accentColor
    sliderFill.Parent = sliderTrack
    
    local sliderFillCorner = Instance.new("UICorner")
    sliderFillCorner.CornerRadius = UDim.new(1, 0)
    sliderFillCorner.Parent = sliderFill
    
    local sliderKnob = Instance.new("Frame")
    sliderKnob.Size = UDim2.new(0, 16, 0, 16)
    sliderKnob.Position = UDim2.new((aimFOV - 20)/280, -8, 0.5, -8)
    sliderKnob.BackgroundColor3 = textColor
    sliderKnob.Parent = sliderTrack
    
    local knobCorner = Instance.new("UICorner")
    knobCorner.CornerRadius = UDim.new(1, 0)
    knobCorner.Parent = sliderKnob
    
    local function updateFOVSlider()
        sliderFill.Size = UDim2.new((aimFOV - 20)/280, 0, 1, 0)
        sliderKnob.Position = UDim2.new((aimFOV - 20)/280, -8, 0.5, -8)
        sliderLabel.Text = "Aim FOV: " .. aimFOV
        updateFOVCircle()
        
        -- Update FOV button colors
        fov50Btn.BackgroundColor3 = aimFOV == 50 and accentColor or buttonColor
        fov100Btn.BackgroundColor3 = aimFOV == 100 and accentColor or buttonColor
        fov150Btn.BackgroundColor3 = aimFOV == 150 and accentColor or buttonColor
    end
    
    sliderTrack.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            draggingSlider = true
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if draggingSlider and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mouseX = UserInputService:GetMouseLocation().X
            local sliderX = sliderTrack.AbsolutePosition.X
            local sliderWidth = sliderTrack.AbsoluteSize.X
            local relativeX = math.clamp(mouseX - sliderX, 0, sliderWidth)
            
            aimFOV = math.floor(20 + (relativeX/sliderWidth) * 280)
            updateFOVSlider()
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            draggingSlider = false
        end
    end)
    
    yPos = yPos + 50
    
    -- Hitbox Selection
    local hitboxContainer = Instance.new("Frame")
    hitboxContainer.Size = UDim2.new(1, 0, 0, 40)
    hitboxContainer.Position = UDim2.new(0, 0, 0, yPos)
    hitboxContainer.BackgroundTransparency = 1
    hitboxContainer.Parent = contentScrollingFrame
    
    local hitboxLabel = Instance.new("TextLabel")
    hitboxLabel.Size = UDim2.new(1, 0, 0, 20)
    hitboxLabel.Position = UDim2.new(0, 0, 0, 0)
    hitboxLabel.BackgroundTransparency = 1
    hitboxLabel.Text = "Aim Part:"
    hitboxLabel.TextColor3 = textColor
    hitboxLabel.Font = Enum.Font.Gotham
    hitboxLabel.TextSize = 13
    hitboxLabel.TextXAlignment = Enum.TextXAlignment.Left
    hitboxLabel.Parent = hitboxContainer
    
    -- Store button references for later updates
    local headBtn, torsoBtn
    
    headBtn = createModernButton(
        hitboxContainer,
        "Head",
        UDim2.new(0.48, 0, 0, 25),
        UDim2.new(0, 0, 0, 20),
        function()
            aimPartName = "Head"
            headBtn.BackgroundColor3 = accentColor
            torsoBtn.BackgroundColor3 = buttonColor
        end
    )
    headBtn.BackgroundColor3 = aimPartName == "Head" and accentColor or buttonColor
    
    torsoBtn = createModernButton(
        hitboxContainer,
        "Torso",
        UDim2.new(0.48, 0, 0, 25),
        UDim2.new(0.52, 0, 0, 20),
        function()
            aimPartName = "HumanoidRootPart"
            headBtn.BackgroundColor3 = buttonColor
            torsoBtn.BackgroundColor3 = accentColor
        end
    )
    torsoBtn.BackgroundColor3 = aimPartName == "HumanoidRootPart" and accentColor or buttonColor
    
    yPos = yPos + 45
    
    -- Add Keybind Option for PC
    if isPC then
        local keybindContainer = Instance.new("Frame")
        keybindContainer.Size = UDim2.new(1, 0, 0, 40)
        keybindContainer.Position = UDim2.new(0, 0, 0, yPos)
        keybindContainer.BackgroundTransparency = 1
        keybindContainer.Parent = contentScrollingFrame
        
        local keybindLabel = Instance.new("TextLabel")
        keybindLabel.Size = UDim2.new(0.6, 0, 0, 20)
        keybindLabel.Position = UDim2.new(0, 0, 0, 0)
        keybindLabel.BackgroundTransparency = 1
        keybindLabel.Text = "Aimlock Key: " .. aimbindKey.Name
        keybindLabel.TextColor3 = textColor
        keybindLabel.Font = Enum.Font.Gotham
        keybindLabel.TextSize = 13
        keybindLabel.TextXAlignment = Enum.TextXAlignment.Left
        keybindLabel.Parent = keybindContainer
        
        local keybindBtn = createModernButton(
            keybindContainer,
            "Change",
            UDim2.new(0.35, 0, 0, 25),
            UDim2.new(0.65, 0, 0, 0),
            function()
                waitingForKeybind = true
                keybindBtn.Text = "Press any key..."
            end
        )
        
        yPos = yPos + 45
    end
    
    -- Credit label
    local creditLabel = Instance.new("TextLabel")
    creditLabel.Size = UDim2.new(1, 0, 0, 20)
    creditLabel.Position = UDim2.new(0, 0, 0, yPos)
    creditLabel.BackgroundTransparency = 1
    creditLabel.Text = "Smart Special Killing v1.0"
    creditLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
    creditLabel.Font = Enum.Font.Gotham
    creditLabel.TextSize = 11
    creditLabel.TextXAlignment = Enum.TextXAlignment.Right
    creditLabel.Parent = contentScrollingFrame
    
    -- Update canvas size automatically
    contentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        contentScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, contentLayout.AbsoluteContentSize.Y + 20)
    end)
    
    -- X Key Toggle
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.KeyCode == Enum.KeyCode.X then
            uiVisible = not uiVisible
            mainFrame.Visible = uiVisible
            toggleUIBtn.Text = uiVisible and "Hide UI [X]" or "Show UI [X]"
        end
        
        -- E Key Toggle for Aimlock
        if not gameProcessed and input.KeyCode == Enum.KeyCode.E then
            aimLockActive = not aimLockActive
            
            -- Update toggle display
            for _, v in pairs(contentScrollingFrame:GetChildren()) do
                if v:IsA("Frame") and v:FindFirstChildOfClass("TextLabel") and 
                   v:FindFirstChildOfClass("TextLabel").Text:find("AimLock") then
                    local btn = v:FindFirstChildOfClass("TextButton")
                    if btn then
                        btn.Text = aimLockActive and "ON" or "OFF"
                        btn.BackgroundColor3 = aimLockActive and successColor or buttonColor
                    end
                end
            end
        end
        
        -- Keybind handling for PC
        if isPC then
            if waitingForKeybind then
                if input.UserInputType == Enum.UserInputType.Keyboard then
                    aimbindKey = input.KeyCode
                    waitingForKeybind = false
                    -- Update keybind display
                    for _, v in pairs(contentScrollingFrame:GetChildren()) do
                        if v:IsA("Frame") and v:FindFirstChildOfClass("TextLabel") and 
                           v:FindFirstChildOfClass("TextLabel").Text:find("Aimlock Key") then
                            v:FindFirstChildOfClass("TextLabel").Text = "Aimlock Key: " .. aimbindKey.Name
                            for _, btn in pairs(v:GetChildren()) do
                                if btn:IsA("TextButton") and btn.Text == "Press any key..." then
                                    btn.Text = "Change"
                                end
                            end
                        end
                    end
                end
            elseif input.KeyCode == aimbindKey then
                aimLockActive = not aimLockActive
                -- Update toggle display
                for _, v in pairs(contentScrollingFrame:GetChildren()) do
                    if v:IsA("Frame") and v:FindFirstChildOfClass("TextLabel") and 
                       v:FindFirstChildOfClass("TextLabel").Text:find("AimLock") then
                        local btn = v:FindFirstChildOfClass("TextButton")
                        if btn then
                            btn.Text = aimLockActive and "ON" or "OFF"
                            btn.BackgroundColor3 = aimLockActive and successColor or buttonColor
                        end
                    end
                end
            end
        end
    end)
end

----------------------------------------------------------------
-- ESP FUNCTIONS
----------------------------------------------------------------
local function clearESP()
    for _, v in pairs(espObjects) do
        if v and v.Parent then
            v:Destroy()
        end
    end
    espObjects = {}
end

local function createESP(zombie)
    if zombie:IsA("Model") and not zombie:FindFirstChild("ESP_Highlight") then
        local highlight = Instance.new("Highlight")
        highlight.Name = "ESP_Highlight"
        highlight.Adornee = zombie
        highlight.FillColor = Color3.new(1, 0, 0)
        highlight.OutlineColor = Color3.new(1, 0, 0)
        highlight.FillTransparency = 0.7
        highlight.OutlineTransparency = 0
        highlight.Parent = zombie
        
        -- Chỉ tạo nhãn tên nếu không phải là zombie thường
        if zombie.Name ~= "zombie" then
            local nameLabel = Instance.new("BillboardGui")
            nameLabel.Name = "ESP_Name"
            nameLabel.Adornee = zombie:FindFirstChild("Head") or zombie:FindFirstChild("HumanoidRootPart")
            nameLabel.Size = UDim2.new(0, 200, 0, 50)
            nameLabel.StudsOffset = Vector3.new(0, 2, 0)
            nameLabel.AlwaysOnTop = true
            nameLabel.Parent = zombie
            
            local textLabel = Instance.new("TextLabel")
            textLabel.Size = UDim2.new(1, 0, 1, 0)
            textLabel.BackgroundTransparency = 1
            textLabel.Text = zombie.Name
            textLabel.TextColor3 = Color3.new(1, 1, 1)
            textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
            textLabel.TextStrokeTransparency = 0
            textLabel.TextSize = 14
            textLabel.Font = Enum.Font.GothamBold
            textLabel.Parent = nameLabel
            
            table.insert(espObjects, nameLabel)
        end
        
        table.insert(espObjects, highlight)
    end
end

local function updateESP()
    clearESP()
    if espVisible then
        for _, z in ipairs(zombiesFolder:GetChildren()) do
            createESP(z)
        end
    end
end

zombiesFolder.ChildAdded:Connect(function(child)
    if espVisible then
        task.wait(0.1)
        createESP(child)
    end
end)

----------------------------------------------------------------
-- SMOOTH AIMING FUNCTIONS
----------------------------------------------------------------
local function smoothAim(targetPosition)
    if not smoothAimEnabled then
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition)
        lastCameraCFrame = camera.CFrame
        return
    end
    
    local currentPosition = camera.CFrame.Position
    local targetLookVector = (targetPosition - currentPosition).Unit
    local targetCFrame = CFrame.new(currentPosition, currentPosition + targetLookVector)
    
    -- Apply smoothness
    local smoothFactor = 1 / smoothnessAmount
    local newCFrame = lastCameraCFrame:Lerp(targetCFrame, smoothFactor)
    
    camera.CFrame = newCFrame
    lastCameraCFrame = newCFrame
end

----------------------------------------------------------------
-- AIMBOT FUNCTIONS (MODIFIED - Version-specific targeting logic)
----------------------------------------------------------------
local function getClosestZombieInFOV()
    local closestZombie = nil
    local closestDistance = math.huge
    local screenCenter = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)
    
    -- First pass: Find the closest zombie in FOV
    for _, zombie in ipairs(zombiesFolder:GetChildren()) do
        if zombie:IsA("Model") then
            -- Skip boss zombies that should be ignored (Smart Special Killing only)
            if currentVersion == "SmartSpecialKilling" and isBossZombie(zombie) and shouldIgnoreBoss(zombie) then
                continue
            end
            
            local part = zombie:FindFirstChild(aimPartName)
            if part then
                local targetPosition = part.Position
                local screenPos, onScreen = camera:WorldToViewportPoint(targetPosition)
                
                if onScreen then
                    local screenDistance = (Vector2.new(screenPos.X, screenPos.Y) - screenCenter).Magnitude
                    local worldDistance = (targetPosition - camera.CFrame.Position).Magnitude
                    
                    if screenDistance <= aimFOV and worldDistance < closestDistance then
                        -- MODIFIED: Version-specific targeting logic
                        if currentVersion == "OnlySniperzombie" and not isSniperZombie(zombie) then
                            -- Skip non-sniper zombies in OnlySniperzombie mode
                        elseif currentVersion == "IgnoreWraith" and isWraithZombie(zombie) then
                            -- Skip Wraith zombies in IgnoreWraith mode
                        else
                            local visible = true
                            if wallCheckEnabled then
                                local raycastParams = RaycastParams.new()
                                raycastParams.FilterDescendantsInstances = {player.Character, camera}
                                raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
                                raycastParams.IgnoreWater = true
                                
                                local rayDirection = (targetPosition - camera.CFrame.Position)
                                local result = workspace:Raycast(
                                    camera.CFrame.Position,
                                    rayDirection.Unit * rayDirection.Magnitude,
                                    raycastParams
                                )
                                
                                if result then
                                    local hitPart = result.Instance
                                    visible = hitPart and (hitPart:IsDescendantOf(zombie) or hitPart == part)
                                end
                            end
                            
                            if visible then
                                closestDistance = worldDistance
                                closestZombie = zombie
                            end
                        end
                    end
                end
            end
        end
    end
    
    -- Second pass for Smart Special Killing: Check for GuardianZombies near the closest zombie
    if currentVersion == "SmartSpecialKilling" and closestZombie then
        local closestZombiePos = closestZombie:FindFirstChild(aimPartName).Position
        local guardianZombie = nil
        local guardianDistance = math.huge
        
        for _, zombie in ipairs(zombiesFolder:GetChildren()) do
            if zombie:IsA("Model") and isGuardianZombie(zombie) then
                local part = zombie:FindFirstChild(aimPartName)
                if part then
                    local targetPosition = part.Position
                    local screenPos, onScreen = camera:WorldToViewportPoint(targetPosition)
                    
                    if onScreen then
                        local screenDistance = (Vector2.new(screenPos.X, screenPos.Y) - screenCenter).Magnitude
                        local worldDistance = (targetPosition - closestZombiePos).Magnitude
                        
                        -- Check if this GuardianZombie is within priority range of the closest zombie
                        if worldDistance <= GUARDIAN_PRIORITY_RANGE and screenDistance <= aimFOV then
                            if worldDistance < guardianDistance then
                                guardianDistance = worldDistance
                                guardianZombie = zombie
                            end
                        end
                    end
                end
            end
        end
        
        -- If we found a GuardianZombie near the closest zombie, prioritize it
        if guardianZombie then
            return guardianZombie
        end
    end
    
    return closestZombie
end

----------------------------------------------------------------
-- HITBOX FUNCTIONS
----------------------------------------------------------------
local function expandHeadHitbox(zombie)
    if zombie:IsA("Model") and zombie:FindFirstChild("Head") then
        local head = zombie.Head
        if head:IsA("BasePart") then
            if not head:FindFirstChild("OriginalSize") then
                local originalSize = Instance.new("Vector3Value")
                originalSize.Name = "OriginalSize"
                originalSize.Value = head.Size
                originalSize.Parent = head
            end
            
            head.Size = Vector3.new(5, 5, 5)
            head.CanCollide = false
            head.Material = Enum.Material.ForceField
        end
    end
end

local function resetHeadHitbox(zombie)
    if zombie:IsA("Model") and zombie:FindFirstChild("Head") then
        local head = zombie.Head
        if head:IsA("BasePart") then
            if head:FindFirstChild("OriginalSize") then
                head.Size = head.OriginalSize.Value
                head.CanCollide = true
                head.Material = Enum.Material.Plastic
                head.OriginalSize:Destroy()
            else
                head.Size = Vector3.new(1, 1, 1)
                head.CanCollide = true
                head.Material = Enum.Material.Plastic
            end
        end
    end
end

local function updateAllZombies()
    for _, zombie in ipairs(zombiesFolder:GetChildren()) do
        if hitboxEnabled then
            expandHeadHitbox(zombie)
        else
            resetHeadHitbox(zombie)
        end
    end
end

zombiesFolder.ChildAdded:Connect(function(zombie)
    task.wait(0.2)
    if hitboxEnabled then
        expandHeadHitbox(zombie)
    end
end)

-- Initialize hitboxes
updateAllZombies()

----------------------------------------------------------------
-- MAIN LOOP (MODIFIED - Version-specific logic)
----------------------------------------------------------------
RunService.RenderStepped:Connect(function()
    -- Update FOV circle position and size
    updateFOVCircle()
    
    -- Clean up boss timers (Smart Special Killing only)
    if currentVersion == "SmartSpecialKilling" then
        cleanupBossTimers()
    end
    
    -- Aimlock logic
    if aimLockActive then
        local targetZombie = getClosestZombieInFOV()
        if targetZombie then
            local targetPart = targetZombie[aimPartName]
            if targetPart then
                local targetPosition = targetPart.Position
                
                -- Use smooth aiming
                smoothAim(targetPosition)
            end
        end
    end
end)

-- Khởi tạo GUI chính
initializeModernGUI()
